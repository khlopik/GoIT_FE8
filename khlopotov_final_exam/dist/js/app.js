"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();document.addEventListener("DOMContentLoaded",function(e){var t=function(){function e(t){_classCallCheck(this,e),this.templateHTML=t.innerHTML,this.searchResult=[],this.accountID="786488",this.ideas=document.createElement("div"),this.ideas.classList.add("grid"),this.ideasTitle=document.querySelector(".ideas__title"),window.ideasInGlobal=this,this.scriptRequest.counter=0,this.getAllData("*"),this.searchInput=document.querySelector(".ideas__search-query");var n=this;document.querySelector(".ideas__search-partners").addEventListener("click",function(e){return n.searchPartner(),e.preventDefault(),!1})}return _createClass(e,[{key:"generateHTML",value:function(e){return _.template(e)({data:this.searchResult})}},{key:"render",value:function(){var e=document.querySelectorAll(".grid");this.ideas.innerHTML=this.generateHTML(this.templateHTML),e.length>0&&this.ideas.parentNode.removeChild(e[0]),this.insertAfter(this.ideas,this.ideasTitle);var t=document.body.clientWidth>=768?768:300;new Masonry(this.ideas,{itemSelector:".grid-item",columnWidth:t})}},{key:"insertAfter",value:function(e,t){t.parentNode.insertBefore(e,t.nextSibling)}},{key:"clearData",value:function(){this.searchResult=[]}},{key:"scriptRequest",value:function(e){function t(e){return function(t){window[n]=null,document.head.removeChild(r),e(t)}}var n="loadJSONP"+this.scriptRequest.counter++,r=document.createElement("script");return new Promise(function(a,i){window[n]=t(a),r.onerror=t(i),r.src=e+"&callback="+n,document.getElementsByTagName("head")[0].appendChild(r)})}},{key:"queryURL",value:function(e){return"http://api.bigstockphoto.com/2/"+this.accountID+"/search/?q="+encodeURIComponent(e)+"&response_detail=all"}},{key:"getAllData",value:function(e){var t=this;console.log("url",this.queryURL(e)),this.scriptRequest(this.queryURL(e)).then(function(e){for(var n=0;n<7;n++){var r=Math.floor(49*Math.random());t.searchResult.push({imageLink:e.data.images[r].preview.url,imageName:e.data.images[r].title||e.data.images[r].description||"Something interesting"})}t.render(),t.scriptRequest.counter=0,console.log("searchResults",e.data.images),t.searchResult=[]},function(e){console.log("Something went wrong",e)})}},{key:"searchPartner",value:function(e){console.log("query string",this.searchInput.value),this.getAllData(this.searchInput.value)}}]),e}();new t(document.getElementById("grid-item")),document.querySelector(".grid"),new Flickity(".carousel-left",{wrapAround:!0,arrowShape:{x0:10,x1:60,y1:50,x2:65,y2:50,x3:15},draggable:!1,accessibility:!1}),new Flickity(".carousel-center",{wrapAround:!0,arrowShape:{x0:10,x1:60,y1:50,x2:65,y2:50,x3:15},draggable:!1,accessibility:!1,initialIndex:1}),new Flickity(".carousel-right",{wrapAround:!0,arrowShape:{x0:10,x1:60,y1:50,x2:65,y2:50,x3:15},draggable:!1,accessibility:!1,initialIndex:2})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
